let SessionLoad = 1
if &cp | set nocp | endif
let s:cpo_save=&cpo
set cpo&vim
inoremap <silent> <Plug>(neocomplcache_start_omni_complete) =neocomplcache#popup_post()
inoremap <silent> <Plug>(neocomplcache_start_auto_complete) =neocomplcache#popup_post()
inoremap <silent> <expr> <Plug>(neocomplcache_start_unite_snippet) unite#sources#snippet#start_complete()
inoremap <silent> <expr> <Plug>(neocomplcache_start_unite_quick_match) unite#sources#neocomplcache#start_quick_match()
inoremap <silent> <expr> <Plug>(neocomplcache_start_unite_complete) unite#sources#neocomplcache#start_complete()
imap <F12> :bdelete
imap <F11> :closei
imap <F8> :NERDTreeToggle
inoremap <F4> =strftime("%Y-%m-%d %H:%M"): 
imap <F3>  :set hlsearchn i
imap <F2> :TlistToggle
imap <C-F1> :FufHelp
inoremap <expr> <BS> neocomplcache#smart_close_popup()."\"
smap <silent> <NL> <Plug>(neocomplcache_snippets_expand)
snoremap  a<BS>
nnoremap <silent>  :CtrlP
snoremap  a<BS>
snoremap % a<BS>%
snoremap ' a<BS>'
vnoremap <silent> ,,w :call EasyMotion#WB(1, 0)
onoremap <silent> ,,w :call EasyMotion#WB(0, 0)
nnoremap <silent> ,,w :call EasyMotion#WB(0, 0)
vnoremap <silent> ,,t :call EasyMotion#T(1, 0)
onoremap <silent> ,,t :call EasyMotion#T(0, 0)
nnoremap <silent> ,,t :call EasyMotion#T(0, 0)
vnoremap <silent> ,,n :call EasyMotion#Search(1, 0)
onoremap <silent> ,,n :call EasyMotion#Search(0, 0)
nnoremap <silent> ,,n :call EasyMotion#Search(0, 0)
vnoremap <silent> ,,k :call EasyMotion#JK(1, 1)
onoremap <silent> ,,k :call EasyMotion#JK(0, 1)
nnoremap <silent> ,,k :call EasyMotion#JK(0, 1)
vnoremap <silent> ,,j :call EasyMotion#JK(1, 0)
onoremap <silent> ,,j :call EasyMotion#JK(0, 0)
nnoremap <silent> ,,j :call EasyMotion#JK(0, 0)
vnoremap <silent> ,,gE :call EasyMotion#EW(1, 1)
onoremap <silent> ,,gE :call EasyMotion#EW(0, 1)
nnoremap <silent> ,,gE :call EasyMotion#EW(0, 1)
vnoremap <silent> ,,f :call EasyMotion#F(1, 0)
onoremap <silent> ,,f :call EasyMotion#F(0, 0)
nnoremap <silent> ,,f :call EasyMotion#F(0, 0)
vnoremap <silent> ,,e :call EasyMotion#E(1, 0)
onoremap <silent> ,,e :call EasyMotion#E(0, 0)
nnoremap <silent> ,,e :call EasyMotion#E(0, 0)
vnoremap <silent> ,,b :call EasyMotion#WB(1, 1)
onoremap <silent> ,,b :call EasyMotion#WB(0, 1)
nnoremap <silent> ,,b :call EasyMotion#WB(0, 1)
vnoremap <silent> ,,W :call EasyMotion#WBW(1, 0)
onoremap <silent> ,,W :call EasyMotion#WBW(0, 0)
nnoremap <silent> ,,W :call EasyMotion#WBW(0, 0)
vnoremap <silent> ,,T :call EasyMotion#T(1, 1)
onoremap <silent> ,,T :call EasyMotion#T(0, 1)
nnoremap <silent> ,,T :call EasyMotion#T(0, 1)
vnoremap <silent> ,,N :call EasyMotion#Search(1, 1)
onoremap <silent> ,,N :call EasyMotion#Search(0, 1)
nnoremap <silent> ,,N :call EasyMotion#Search(0, 1)
vnoremap <silent> ,,ge :call EasyMotion#E(1, 1)
onoremap <silent> ,,ge :call EasyMotion#E(0, 1)
nnoremap <silent> ,,ge :call EasyMotion#E(0, 1)
vnoremap <silent> ,,F :call EasyMotion#F(1, 1)
onoremap <silent> ,,F :call EasyMotion#F(0, 1)
nnoremap <silent> ,,F :call EasyMotion#F(0, 1)
vnoremap <silent> ,,E :call EasyMotion#EW(1, 0)
onoremap <silent> ,,E :call EasyMotion#EW(0, 0)
nnoremap <silent> ,,E :call EasyMotion#EW(0, 0)
vnoremap <silent> ,,B :call EasyMotion#WBW(1, 1)
onoremap <silent> ,,B :call EasyMotion#WBW(0, 1)
nnoremap <silent> ,,B :call EasyMotion#WBW(0, 1)
nmap ,ca <Plug>NERDCommenterAltDelims
xmap ,cu <Plug>NERDCommenterUncomment
nmap ,cu <Plug>NERDCommenterUncomment
xmap ,cb <Plug>NERDCommenterAlignBoth
nmap ,cb <Plug>NERDCommenterAlignBoth
xmap ,cl <Plug>NERDCommenterAlignLeft
nmap ,cl <Plug>NERDCommenterAlignLeft
nmap ,cA <Plug>NERDCommenterAppend
xmap ,cy <Plug>NERDCommenterYank
nmap ,cy <Plug>NERDCommenterYank
xmap ,cs <Plug>NERDCommenterSexy
nmap ,cs <Plug>NERDCommenterSexy
xmap ,ci <Plug>NERDCommenterInvert
nmap ,ci <Plug>NERDCommenterInvert
nmap ,c$ <Plug>NERDCommenterToEOL
xmap ,cn <Plug>NERDCommenterNested
nmap ,cn <Plug>NERDCommenterNested
xmap ,cm <Plug>NERDCommenterMinimal
nmap ,cm <Plug>NERDCommenterMinimal
xmap ,c  <Plug>NERDCommenterToggle
nmap ,c  <Plug>NERDCommenterToggle
xmap ,cc <Plug>NERDCommenterComment
nmap ,cc <Plug>NERDCommenterComment
nnoremap ,gb :GitBlame
nnoremap ,gp :GitPullRebase
nnoremap ,gc :GitCommit
nnoremap ,gA :GitAdd <cfile>
nnoremap ,ga :GitAdd
nnoremap ,gl :GitLog
nnoremap ,gs :GitStatus
nnoremap ,gD :GitDiff --cached
nnoremap ,gd :GitDiff
nmap <silent> ,w,t <Plug>VimwikiTabMakeDiaryNote
nmap <silent> ,w,w <Plug>VimwikiMakeDiaryNote
nmap <silent> ,w,i <Plug>VimwikiDiaryGenerateLinks
nmap <silent> ,wi <Plug>VimwikiDiaryIndex
nmap <silent> ,ws <Plug>VimwikiUISelect
nmap <silent> ,wt <Plug>VimwikiTabIndex
nmap <silent> ,ww <Plug>VimwikiIndex
noremap <silent> ,mj J
noremap <silent> ,mh H
noremap <silent> ,mk K
noremap <silent> ,ml L
snoremap <silent> ,cl :wincmd l:close
onoremap <silent> ,cl :wincmd l:close
noremap <silent> ,ch :wincmd h:close
noremap <silent> ,ck :wincmd k:close
noremap <silent> ,cj :wincmd j:close
noremap <silent> ,l :wincmd l
noremap <silent> ,k :wincmd k
noremap <silent> ,j :wincmd j
noremap <silent> ,h :wincmd h
nmap ,r :registers
nmap ,9 "9p
nmap ,8 "8p
nmap ,7 "7p
nmap ,6 "6p
nmap ,5 "5p
nmap ,4 "4p
nmap ,3 "3p
nmap ,2 "2p
nmap ,1 "1p
nmap ,0 "0p
nmap ,p "*p
nmap ,Y "yy
nmap ,y "*y
nmap <silent> ,sv :so $MYVIMRC
nmap <silent> ,ev :e $MYVIMRC
map ,tt <Plug>VimwikiToggleListItem
noremap ,wo <Plug>ZoomWin
snoremap U a<BS>U
snoremap \ a<BS>\
snoremap ^ a<BS>^
snoremap ` a<BS>`
nmap gx <Plug>NetrwBrowseX
snoremap <Left> bi
snoremap <Right> a
snoremap <BS> a<BS>
nnoremap <silent> <Plug>NetrwBrowseX :call netrw#NetrwBrowseX(expand("<cWORD>"),0)
xnoremap <silent> <Plug>NERDCommenterUncomment :call NERDComment("x", "Uncomment")
nnoremap <silent> <Plug>NERDCommenterUncomment :call NERDComment("n", "Uncomment")
xnoremap <silent> <Plug>NERDCommenterAlignBoth :call NERDComment("x", "AlignBoth")
nnoremap <silent> <Plug>NERDCommenterAlignBoth :call NERDComment("n", "AlignBoth")
xnoremap <silent> <Plug>NERDCommenterAlignLeft :call NERDComment("x", "AlignLeft")
nnoremap <silent> <Plug>NERDCommenterAlignLeft :call NERDComment("n", "AlignLeft")
nnoremap <silent> <Plug>NERDCommenterAppend :call NERDComment("n", "Append")
xnoremap <silent> <Plug>NERDCommenterYank :call NERDComment("x", "Yank")
nnoremap <silent> <Plug>NERDCommenterYank :call NERDComment("n", "Yank")
xnoremap <silent> <Plug>NERDCommenterSexy :call NERDComment("x", "Sexy")
nnoremap <silent> <Plug>NERDCommenterSexy :call NERDComment("n", "Sexy")
xnoremap <silent> <Plug>NERDCommenterInvert :call NERDComment("x", "Invert")
nnoremap <silent> <Plug>NERDCommenterInvert :call NERDComment("n", "Invert")
nnoremap <silent> <Plug>NERDCommenterToEOL :call NERDComment("n", "ToEOL")
xnoremap <silent> <Plug>NERDCommenterNested :call NERDComment("x", "Nested")
nnoremap <silent> <Plug>NERDCommenterNested :call NERDComment("n", "Nested")
xnoremap <silent> <Plug>NERDCommenterMinimal :call NERDComment("x", "Minimal")
nnoremap <silent> <Plug>NERDCommenterMinimal :call NERDComment("n", "Minimal")
xnoremap <silent> <Plug>NERDCommenterToggle :call NERDComment("x", "Toggle")
nnoremap <silent> <Plug>NERDCommenterToggle :call NERDComment("n", "Toggle")
xnoremap <silent> <Plug>NERDCommenterComment :call NERDComment("x", "Comment")
nnoremap <silent> <Plug>NERDCommenterComment :call NERDComment("n", "Comment")
vmap <C-Tab> >
vmap <C-S-Tab> <
vmap <F12> :bdelete
nmap <F12> :bdelete
omap <F12> :bdelete
vmap <F11> :closei
nmap <F11> :close
omap <F11> :close
vmap <F8> :NERDTreeToggle
nmap <F8> :NERDTreeToggle
omap <F8> :NERDTreeToggle
noremap <F4> a=strftime("%Y-%m-%d %H:%M"): 
vmap <F3>  :set hlsearchn i
nmap <F3> :set hlsearchn
vmap <F2> :TlistToggle
nmap <F2> :TlistToggle
vmap <C-F1> :FufHelp
nmap <C-F1> :FufHelp
omap <C-F1> :FufHelp
inoremap <expr>  neocomplcache#cancel_popup()
inoremap <expr>  neocomplcache#smart_close_popup()."\"
inoremap <expr> 	 pumvisible() ? "\" : "\	"
imap <silent> <NL> <Plug>(neocomplcache_snippets_expand)
inoremap <expr>  neocomplcache#smart_close_popup() . "\"
inoremap <expr>  neocomplcache#close_popup()
inoremap jk 
let &cpo=s:cpo_save
unlet s:cpo_save
set autochdir
set autoindent
set autoread
set autowriteall
set backspace=indent,eol,start
set browsedir=buffer
set cinkeys=0{,0},0),:,!^F,o,O,e
set comments=s1:/*,mb:*,ex:*/,://,b:#,:XCOMM,n:>,fb:-
set commentstring=#%s
set completefunc=neocomplcache#manual_complete
set completeopt=menuone
set confirm
set expandtab
set fileencodings=utf-8,cp1251,cp866,koi8-r
set fileformats=unix,dos,mac
set foldlevelstart=99
set helplang=en,ru
set hidden
set history=150
set hlsearch
set ignorecase
set iminsert=0
set imsearch=-1
set includeexpr=substitute(v:fname,'\\.','/','g')
set incsearch
set indentexpr=GetPythonIndent(v:lnum)
set indentkeys=0{,0},:,!^F,o,O,e,<:>,=elif,=except
set langmap=—ë–π—Ü—É–∫–µ–Ω–≥—à—â–∑—Ö—ä—Ñ—ã–≤–∞–ø—Ä–æ–ª–¥–∂—ç—è—á—Å–º–∏—Ç—å–±—é–ô–¶–£–ö–ïH–ì–®–©–ó–•–™–§–´–í–ê–ü–†–û–õ–î–ñ–≠–Ø–ß–°–ú–ò–¢–¨–ë–Æ;`qwertyuiop[]asdfghjkl\\;'zxcvbnm\\,.QWERTYUIOP{}ASDFGHJKL:\"ZXCVBNM<>
set laststatus=2
set listchars=tab:‚ñπ¬∑,trail:¬∑,extends:¬ª,precedes:¬´,nbsp:√ó
set mouse=a
set mousemodel=popup
set omnifunc=pythoncomplete#Complete
set ruler
set runtimepath=~/.vim/bundle/vundle,~/.vim/bundle/nerdtree,~/.vim/bundle/ctrlp.vim,~/.vim/bundle/easytags.vim,~/.vim/bundle/taglist.vim,~/.vim/bundle/sessionman.vim,~/.vim/bundle/vim-colorschemes,~/.vim/bundle/ZoomWin,~/.vim/bundle/vimwiki,~/.vim/bundle/git-vim,~/.vim/bundle/vim-fugitive,~/.vim/bundle/python.vim--Vasiliev,~/.vim/bundle/nerdcommenter,~/.vim/bundle/vim-easymotion,~/.vim/bundle/neocomplcache,~/.vim/bundle/neocomplcache-snippets_complete,~/.vim,/usr/local/share/vim/vimfiles,/usr/local/share/vim/vim73,/usr/local/share/vim/vimfiles/after,~/.vim/after,~/.vim/bundle/vundle/,~/.vim/bundle/vundle/after,~/.vim/bundle/nerdtree/after,~/.vim/bundle/ctrlp.vim/after,~/.vim/bundle/easytags.vim/after,~/.vim/bundle/taglist.vim/after,~/.vim/bundle/sessionman.vim/after,~/.vim/bundle/vim-colorschemes/after,~/.vim/bundle/ZoomWin/after,~/.vim/bundle/vimwiki/after,~/.vim/bundle/git-vim/after,~/.vim/bundle/vim-fugitive/after,~/.vim/bundle/python.vim--Vasiliev/after,~/.vim/bundle/nerdcommenter/after,~/.vim/bundle/vim-easymotion/after,~/.vim/bundle/neocomplcache/after,~/.vim/bundle/neocomplcache-snippets_complete/after
set shiftwidth=4
set shortmess=filnxtToOI
set showcmd
set showmatch
set showtabline=2
set softtabstop=4
set spelllang=ru_yo,en_us
set statusline=\ %#StatusLineBufferNumber#[%n]%*\\%<%f%*\\[%{&ft}\ |\\%{&fileencoding}\ |\\%{&ff}]%=\\Line:\ %l/%L\\Col:\ %3v\\[%P]%#error#%m%*%#warningmsg#%r%*%#error#%{StatuslineTabWarning()}%*
set suffixesadd=.py
set tabstop=4
set tags=./tags,./TAGS,tags,TAGS,~/.vimtags
set undolevels=5000
set whichwrap=b,s,<,>,[,]
set wildignore=*.so,*.swp,*.zip,*.pyc
set wildmenu
set wildmode=list:longest,full
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/vimwiki/diary
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +11 ~/vimwiki/diary/2012-10-15.wiki
badd +10 ~/work/gtd_my/today.py
silent! argdel *
edit ~/vimwiki/diary/2012-10-15.wiki
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
let s:cpo_save=&cpo
set cpo&vim
inoremap <buffer> <expr> <S-Tab> vimwiki#tbl#kbd_shift_tab()
nmap <buffer> <silent> 	 <Plug>VimwikiNextLink
vmap <buffer> <silent>  <Plug>VimwikiNormalizeLinkVisualCR
nmap <buffer> <silent>  <Plug>VimwikiFollowLink
vmap <buffer> <silent> + <Plug>VimwikiNormalizeLinkVisual
nmap <buffer> <silent> + <Plug>VimwikiNormalizeLink
nmap <buffer> <silent> ,wr <Plug>VimwikiRenameLink
nmap <buffer> <silent> ,wd <Plug>VimwikiDeleteLink
nmap <buffer> ,whh <Plug>Vimwiki2HTMLBrowse
nmap <buffer> ,wh <Plug>Vimwiki2HTML
nmap <buffer> <silent> - <Plug>VimwikiRemoveHeaderLevel
nmap <buffer> <silent> <D-CR> <Plug>VimwikiTabnewLink
nmap <buffer> <silent> = <Plug>VimwikiAddHeaderLevel
nnoremap <buffer> O :call vimwiki#lst#kbd_oO('O')
vnoremap <buffer> <silent> ac :call vimwiki#base#TO_table_col(0, 1)
onoremap <buffer> <silent> ac :call vimwiki#base#TO_table_col(0, 0)
vnoremap <buffer> <silent> a\ :call vimwiki#base#TO_table_cell(0, 1)
onoremap <buffer> <silent> a\ :call vimwiki#base#TO_table_cell(0, 0)
vnoremap <buffer> <silent> ah :call vimwiki#base#TO_header(0, 1)
onoremap <buffer> <silent> ah :call vimwiki#base#TO_header(0, 0)
nnoremap <buffer> gww :VimwikiTableAlignW
nnoremap <buffer> gqq :VimwikiTableAlignQ
nnoremap <buffer> gl3 :VimwikiListChangeLevel #
nnoremap <buffer> gl# :VimwikiListChangeLevel #
nnoremap <buffer> gl- :VimwikiListChangeLevel -
nnoremap <buffer> gl8 :VimwikiListChangeLevel *
nnoremap <buffer> gl* :VimwikiListChangeLevel *
nnoremap <buffer> glm :VimwikiListChangeLevel >>
nnoremap <buffer> gll :VimwikiListChangeLevel <<
vnoremap <buffer> <silent> ic :call vimwiki#base#TO_table_col(1, 1)
onoremap <buffer> <silent> ic :call vimwiki#base#TO_table_col(1, 0)
vnoremap <buffer> <silent> i\ :call vimwiki#base#TO_table_cell(1, 1)
onoremap <buffer> <silent> i\ :call vimwiki#base#TO_table_cell(1, 0)
vnoremap <buffer> <silent> ih :call vimwiki#base#TO_header(1, 1)
onoremap <buffer> <silent> ih :call vimwiki#base#TO_header(1, 0)
nnoremap <buffer> o :call vimwiki#lst#kbd_oO('o')
nnoremap <buffer> <silent> <Plug>VimwikiRemoveHeaderLevel :call vimwiki#base#RemoveHeaderLevel()
nnoremap <buffer> <silent> <Plug>VimwikiAddHeaderLevel :call vimwiki#base#AddHeaderLevel()
nmap <buffer> <silent> <M-Right> <Plug>VimwikiTableMoveColumnRight
nmap <buffer> <silent> <M-Left> <Plug>VimwikiTableMoveColumnLeft
nmap <buffer> <silent> <C-Up> <Plug>VimwikiDiaryPrevDay
nmap <buffer> <silent> <C-Down> <Plug>VimwikiDiaryNextDay
nmap <buffer> <silent> <S-Tab> <Plug>VimwikiPrevLink
nmap <buffer> <silent> <BS> <Plug>VimwikiGoBackLink
nmap <buffer> <silent> <C-S-CR> <Plug>VimwikiTabnewLink
nmap <buffer> <silent> <C-CR> <Plug>VimwikiVSplitLink
nmap <buffer> <silent> <S-CR> <Plug>VimwikiSplitLink
inoremap <buffer> <expr> 	 vimwiki#tbl#kbd_tab()
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=
setlocal noarabic
setlocal autoindent
setlocal balloonexpr=
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal nocindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
set colorcolumn=80
setlocal colorcolumn=80
setlocal comments=b:*,b:#,b:-
setlocal commentstring=%%%s
setlocal complete=.,w,b,u,t,i
setlocal concealcursor=
set conceallevel=2
setlocal conceallevel=2
setlocal completefunc=neocomplcache#auto_complete
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
set cursorline
setlocal cursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'vimwiki'
setlocal filetype=vimwiki
endif
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=99
setlocal foldmarker={{{,}}}
set foldmethod=indent
setlocal foldmethod=indent
setlocal foldminlines=1
set foldnestmax=3
setlocal foldnestmax=3
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=tnro
setlocal formatlistpat=^\\s*[*#-]\\s*
setlocal grepprg=
setlocal iminsert=0
setlocal imsearch=-1
setlocal include=
setlocal includeexpr=
setlocal indentexpr=
setlocal indentkeys=0{,0},:,0#,!^F,o,O,e
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255
setlocal keywordprg=
set linebreak
setlocal linebreak
setlocal nolisp
set list
setlocal list
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=octal,hex
set number
setlocal number
setlocal numberwidth=4
setlocal omnifunc=
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=4
setlocal noshortname
setlocal nosmartindent
setlocal softtabstop=4
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=ru_yo,en_us
setlocal statusline=
setlocal suffixesadd=.wiki
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != 'vimwiki'
setlocal syntax=vimwiki
endif
setlocal tabstop=4
setlocal tags=
setlocal textwidth=0
setlocal thesaurus=
setlocal noundofile
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
let s:l = 15 - ((14 * winheight(0) + 17) / 35)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
15
normal! 043l
tabnext 1
if exists('s:wipebuf')
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToOI
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
